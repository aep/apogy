openapi: 3.1.0
info:
  title: Apogy DB API
  version: '1.0.0'

paths:
  /v1/{model}/{id}:
    get:
      operationId: getDocument
      summary: Get a document by model and ID
      parameters:
        - name: model
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
    delete:
      operationId: deleteDocument
      summary: Delete a document by model and ID
      parameters:
        - name: model
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted document
        '404':
          description: Document not found
    
  /v1:
    post:
      operationId: putDocument
      summary: Create or update a document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successfully stored document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDocumentOK'

  /v1/q:
    post:
      operationId: searchDocuments
      summary: Search for documents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
          application/x-aql:
            schema:
              type: string
      responses:
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'

  /v1/reactor:
    get:
      operationId: reactorLoop
      summary: Bidirectional streaming for reactor operations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactorIn'
      responses:
        '200':
          description: Successful connection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactorOut'

components:
  schemas:
    History:
      type: object
      properties:
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time

    Document:
      type: object
      required:
        - id
        - model
      properties:
        id:
          type: string
        model:
          type: string
        version:
          type: integer
          format: uint64
        history:
          $ref: '#/components/schemas/History'
        val:
          type: object
          additionalProperties: true
        status:
          type: object
          additionalProperties: true

    PutDocumentOK:
      type: object
      required:
        - path
      properties:
        path:
          type: string

    Filter:
      type: object
      required:
        - key
      properties:
        key:
          type: string
        equal: {}
        greater: {}
        less: {}

    SearchRequest:
      type: object
      required:
        - model
      properties:
        model:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        links:
          type: array
          items:
            $ref: '#/components/schemas/SearchRequest'
        cursor:
          type: string
        limit:
          type: integer
        full:
          type: boolean
          description: If true, return full documents instead of just the ids

    SearchResponse:
      type: object
      required:
        - documents
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        cursor:
          type: string

    ReactorIn:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/ReactorStart'
        working:
          $ref: '#/components/schemas/ReactorWorking'
        done:
          $ref: '#/components/schemas/ReactorDone'

    ReactorStart:
      type: object
      required:
        - id
      properties:
        id:
          type: string

    ReactorWorking:
      type: object

    ReactorDone:
      type: object

    ReactorOut:
      type: object
      properties:
        activation:
          $ref: '#/components/schemas/ReactorActivation'

    ReactorActivation:
      type: object
      required:
        - model
        - id
        - version
      properties:
        model:
          type: string
        id:
          type: string
        version:
          type: integer
          format: uint64

    # New schemas for validation
    ValidationRequest:
      type: object
      properties:
        current:
          $ref: '#/components/schemas/Document'
        pending:
          $ref: '#/components/schemas/Document'

    ErrorResponse:
      type: object
      properties:
        message:
          type: string

    ValidationResponse:
      type: object
      properties:
        reject:
          type: object
          properties:
            message:
              type: string
