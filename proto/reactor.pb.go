// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.2
// source: reactor.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Nothing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Nothing) Reset() {
	*x = Nothing{}
	mi := &file_reactor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Nothing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nothing) ProtoMessage() {}

func (x *Nothing) ProtoReflect() protoreflect.Message {
	mi := &file_reactor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nothing.ProtoReflect.Descriptor instead.
func (*Nothing) Descriptor() ([]byte, []int) {
	return file_reactor_proto_rawDescGZIP(), []int{0}
}

type ReactorStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReactorStart) Reset() {
	*x = ReactorStart{}
	mi := &file_reactor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactorStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactorStart) ProtoMessage() {}

func (x *ReactorStart) ProtoReflect() protoreflect.Message {
	mi := &file_reactor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactorStart.ProtoReflect.Descriptor instead.
func (*ReactorStart) Descriptor() ([]byte, []int) {
	return file_reactor_proto_rawDescGZIP(), []int{1}
}

func (x *ReactorStart) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReactorWorking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReactorWorking) Reset() {
	*x = ReactorWorking{}
	mi := &file_reactor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactorWorking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactorWorking) ProtoMessage() {}

func (x *ReactorWorking) ProtoReflect() protoreflect.Message {
	mi := &file_reactor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactorWorking.ProtoReflect.Descriptor instead.
func (*ReactorWorking) Descriptor() ([]byte, []int) {
	return file_reactor_proto_rawDescGZIP(), []int{2}
}

type ReactorDone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReactorDone) Reset() {
	*x = ReactorDone{}
	mi := &file_reactor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactorDone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactorDone) ProtoMessage() {}

func (x *ReactorDone) ProtoReflect() protoreflect.Message {
	mi := &file_reactor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactorDone.ProtoReflect.Descriptor instead.
func (*ReactorDone) Descriptor() ([]byte, []int) {
	return file_reactor_proto_rawDescGZIP(), []int{3}
}

type ReactorIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*ReactorIn_Start
	//	*ReactorIn_Working
	//	*ReactorIn_Done
	Kind isReactorIn_Kind `protobuf_oneof:"kind"`
}

func (x *ReactorIn) Reset() {
	*x = ReactorIn{}
	mi := &file_reactor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactorIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactorIn) ProtoMessage() {}

func (x *ReactorIn) ProtoReflect() protoreflect.Message {
	mi := &file_reactor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactorIn.ProtoReflect.Descriptor instead.
func (*ReactorIn) Descriptor() ([]byte, []int) {
	return file_reactor_proto_rawDescGZIP(), []int{4}
}

func (m *ReactorIn) GetKind() isReactorIn_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *ReactorIn) GetStart() *ReactorStart {
	if x, ok := x.GetKind().(*ReactorIn_Start); ok {
		return x.Start
	}
	return nil
}

func (x *ReactorIn) GetWorking() *ReactorWorking {
	if x, ok := x.GetKind().(*ReactorIn_Working); ok {
		return x.Working
	}
	return nil
}

func (x *ReactorIn) GetDone() *ReactorDone {
	if x, ok := x.GetKind().(*ReactorIn_Done); ok {
		return x.Done
	}
	return nil
}

type isReactorIn_Kind interface {
	isReactorIn_Kind()
}

type ReactorIn_Start struct {
	Start *ReactorStart `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}

type ReactorIn_Working struct {
	Working *ReactorWorking `protobuf:"bytes,2,opt,name=working,proto3,oneof"`
}

type ReactorIn_Done struct {
	Done *ReactorDone `protobuf:"bytes,3,opt,name=done,proto3,oneof"`
}

func (*ReactorIn_Start) isReactorIn_Kind() {}

func (*ReactorIn_Working) isReactorIn_Kind() {}

func (*ReactorIn_Done) isReactorIn_Kind() {}

type ReactorOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*ReactorOut_Activation
	Kind isReactorOut_Kind `protobuf_oneof:"kind"`
}

func (x *ReactorOut) Reset() {
	*x = ReactorOut{}
	mi := &file_reactor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactorOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactorOut) ProtoMessage() {}

func (x *ReactorOut) ProtoReflect() protoreflect.Message {
	mi := &file_reactor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactorOut.ProtoReflect.Descriptor instead.
func (*ReactorOut) Descriptor() ([]byte, []int) {
	return file_reactor_proto_rawDescGZIP(), []int{5}
}

func (m *ReactorOut) GetKind() isReactorOut_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *ReactorOut) GetActivation() *ReactorActivation {
	if x, ok := x.GetKind().(*ReactorOut_Activation); ok {
		return x.Activation
	}
	return nil
}

type isReactorOut_Kind interface {
	isReactorOut_Kind()
}

type ReactorOut_Activation struct {
	Activation *ReactorActivation `protobuf:"bytes,1,opt,name=activation,proto3,oneof"`
}

func (*ReactorOut_Activation) isReactorOut_Kind() {}

type ReactorActivation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model   string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Id      string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Version uint64 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ReactorActivation) Reset() {
	*x = ReactorActivation{}
	mi := &file_reactor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactorActivation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactorActivation) ProtoMessage() {}

func (x *ReactorActivation) ProtoReflect() protoreflect.Message {
	mi := &file_reactor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactorActivation.ProtoReflect.Descriptor instead.
func (*ReactorActivation) Descriptor() ([]byte, []int) {
	return file_reactor_proto_rawDescGZIP(), []int{6}
}

func (x *ReactorActivation) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ReactorActivation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReactorActivation) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

var File_reactor_proto protoreflect.FileDescriptor

var file_reactor_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x72, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x09, 0x0a, 0x07, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e,
	0x67, 0x22, 0x1e, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x6f,
	0x6e, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e,
	0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x31, 0x0a,
	0x07, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x28, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x6f,
	0x6e, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x22, 0x50, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x75, 0x74,
	0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x22, 0x53, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x4a, 0x0a, 0x0e, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x6f, 0x70, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x1a, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4f, 0x75, 0x74, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0d, 0x5a, 0x0b, 0x61, 0x70, 0x6f, 0x67, 0x79, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_reactor_proto_rawDescOnce sync.Once
	file_reactor_proto_rawDescData = file_reactor_proto_rawDesc
)

func file_reactor_proto_rawDescGZIP() []byte {
	file_reactor_proto_rawDescOnce.Do(func() {
		file_reactor_proto_rawDescData = protoimpl.X.CompressGZIP(file_reactor_proto_rawDescData)
	})
	return file_reactor_proto_rawDescData
}

var file_reactor_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_reactor_proto_goTypes = []any{
	(*Nothing)(nil),           // 0: proto.Nothing
	(*ReactorStart)(nil),      // 1: proto.ReactorStart
	(*ReactorWorking)(nil),    // 2: proto.ReactorWorking
	(*ReactorDone)(nil),       // 3: proto.ReactorDone
	(*ReactorIn)(nil),         // 4: proto.ReactorIn
	(*ReactorOut)(nil),        // 5: proto.ReactorOut
	(*ReactorActivation)(nil), // 6: proto.ReactorActivation
}
var file_reactor_proto_depIdxs = []int32{
	1, // 0: proto.ReactorIn.start:type_name -> proto.ReactorStart
	2, // 1: proto.ReactorIn.working:type_name -> proto.ReactorWorking
	3, // 2: proto.ReactorIn.done:type_name -> proto.ReactorDone
	6, // 3: proto.ReactorOut.activation:type_name -> proto.ReactorActivation
	4, // 4: proto.ReactorService.ReactorLoop:input_type -> proto.ReactorIn
	5, // 5: proto.ReactorService.ReactorLoop:output_type -> proto.ReactorOut
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_reactor_proto_init() }
func file_reactor_proto_init() {
	if File_reactor_proto != nil {
		return
	}
	file_reactor_proto_msgTypes[4].OneofWrappers = []any{
		(*ReactorIn_Start)(nil),
		(*ReactorIn_Working)(nil),
		(*ReactorIn_Done)(nil),
	}
	file_reactor_proto_msgTypes[5].OneofWrappers = []any{
		(*ReactorOut_Activation)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_reactor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_reactor_proto_goTypes,
		DependencyIndexes: file_reactor_proto_depIdxs,
		MessageInfos:      file_reactor_proto_msgTypes,
	}.Build()
	File_reactor_proto = out.File
	file_reactor_proto_rawDesc = nil
	file_reactor_proto_goTypes = nil
	file_reactor_proto_depIdxs = nil
}
